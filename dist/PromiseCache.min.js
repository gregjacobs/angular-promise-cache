/*!
 * angular-promise-cache
 * 0.2.0
 *
 * Copyright(c) 2014 Gregory Jacobs <greg@greg-jacobs.com>
 * MIT
 *
 * https://github.com/gregjacobs/angular-promise-cache
 */
angular.module("angular-promise-cache",[]).factory("PromiseCache",["PromiseCache.CacheEntry","PromiseCache.LruList",function(a,b){var c=function(a){angular.extend(this,a)};return angular.extend(c.prototype,{context:null,maxSize:null,maxAge:null,pruneInterval:6e4,cache:null,size:0,pruningIntervalId:null,lruList:null,get:function(a,c){var d=this.resolveFactoryFn(c);this.cache||(this.cache={}),this.lruList||null===this.maxSize||(this.lruList=new b);var e,f=this.cache[a];return f&&!f.isExpired(this.maxAge)?(e=f.getPromise(),this.lruList&&this.lruList.touch(f)):e=this.addEntry(a,d),e},resolveFactoryFn:function(a){if("function"==typeof a)return a;if(!this.factory)throw new Error("`factory` function required as 2nd arg to get(), since no `factory` provided to PromiseCache constructor");var b=a;return angular.bind.apply(angular,[this.context,this.factory].concat(b||[]))},addEntry:function(b,c){var d,e=c();if(!e||"function"!=typeof e.then)throw new Error("`factory` function must return a Promise object");return d=this.cache[b]=new a(b,e),this.lruList&&this.lruList.pushMru(d),this.size++,this.startPruningInterval(),null!==this.maxSize&&this.size>this.maxSize&&this.removeEntry(this.lruList.getLru()),e.then(null,angular.bind(this,this.removeIfEntry,b,d)),e},getSize:function(){return this.prune(),this.size},has:function(a){if(!this.cache)return!1;var b=this.cache[a];return!!b&&!b.isExpired(this.maxAge)},remove:function(a){var b=this.cache;if(!b)return!1;var c=b[a];c&&this.removeEntry(c)},removeEntry:function(a){1===this.size?this.clear():(this.size--,this.lruList&&this.lruList.remove(a),delete this.cache[a.getKey()])},removeIfEntry:function(a,b){var c=this.cache;c&&c[a]===b&&this.removeEntry(b)},clear:function(){this.cache=this.lruList=null,this.size=0,this.stopPruningInterval()},prune:function(){var a=this.cache,b=this.maxAge;if(a&&null!=b){var c;for(var d in a)a.hasOwnProperty(d)&&(c=a[d]).isExpired(b)&&this.removeEntry(c)}},startPruningInterval:function(){if(!this.pruningIntervalId){var a=this.pruneInterval;if(null!=a&&null!=this.maxAge){var b=angular.bind(this,this.prune);this.pruningIntervalId=setInterval(b,a)}}},stopPruningInterval:function(){this.pruningIntervalId&&(clearInterval(this.pruningIntervalId),this.pruningIntervalId=null)},destroy:function(){this.clear()}}),c}]),angular.module("angular-promise-cache").factory("PromiseCache.CacheEntry",function(){var a=function(a,b){this.key=a,this.promise=b,this.entryTime=(new Date).getTime(),this.next=null,this.prev=null};return angular.extend(a.prototype,{getKey:function(){return this.key},getPromise:function(){return this.promise},isExpired:function(a){if(null===a)return!1;var b=(new Date).getTime();return b>this.entryTime+a}}),a}),angular.module("angular-promise-cache").factory("PromiseCache.LruList",function(){var a=function(){this.mru=null,this.lru=null};return angular.extend(a.prototype,{pushMru:function(a){this.lru?(this.mru.next=a,a.prev=this.mru,this.mru=a):this.lru=this.mru=a},touch:function(a){this.mru!==a&&(this.remove(a),this.pushMru(a))},getLru:function(){return this.lru},remove:function(a){var b=a.next,c=a.prev;b&&(b.prev=c),c&&(c.next=b),a===this.mru&&(this.mru=c),a===this.lru&&(this.lru=b),a.prev=a.next=null},getLruEntries:function(){for(var a=this.lru,b=[];a;)b.push(a),a=a.next;return b}}),a});