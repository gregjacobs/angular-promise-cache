/*!
 * angular-promise-cache
 * 0.1.0
 *
 * Copyright(c) 2014 
 * MIT
 *
 * 
 */
angular.module("angular-promise-cache",[]).factory("PromiseCache",function(){function a(a){angular.extend(this,a)}function b(a){this.promise=a,this.entryTime=(new Date).getTime()}return a.prototype={constructor:a,maxAge:Number.POSITIVE_INFINITY,get:function(a,c){if(this.cache||(this.cache={}),"function"!=typeof c)throw new Error("`setter` arg required, and must be a function");var d,e=this,f=this.cache[a];if(f&&!this.isExpired(f))d=f.getPromise();else{if(d=c(),!d||"function"!=typeof d.then)throw new Error("`setter` function must return a Promise object");f=this.cache[a]=new b(d),d.then(null,function(){delete e.cache[a]})}return d},isExpired:function(a){var b=(new Date).getTime();return b>a.getEntryTime()+this.maxAge}},b.prototype={constructor:b,getPromise:function(){return this.promise},getEntryTime:function(){return this.entryTime}},a});